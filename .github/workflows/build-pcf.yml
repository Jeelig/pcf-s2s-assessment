name: Build PCF Solution

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  pcf-build:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh
        working-directory: AssessmentPCFControl
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: AssessmentPCFControl/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build PCF control
        run: npm run build

      - name: Upload control bundle
        uses: actions/upload-artifact@v4
        with:
          name: assessment-pcf-control
          path: out

  solution-build:
    runs-on: windows-latest
    needs: pcf-build
    defaults:
      run:
        shell: pwsh
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 6.x

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: AssessmentPCFControl/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: AssessmentPCFControl

      - name: Build Power Platform solution
        run: dotnet build AssessmentPCF.cdsproj /p:Configuration=Release

      - name: Validate solution package structure
        run: |
          Add-Type -AssemblyName System.IO.Compression.FileSystem
          $required = @('solution.xml','customizations.xml','[Content_Types].xml')
          Get-ChildItem -Path bin/Release -Filter '*.zip' | ForEach-Object {
            $zip = [IO.Compression.ZipFile]::OpenRead($_.FullName)
            try {
              $entries = $zip.Entries.FullName
              foreach ($file in $required) {
                if (-not ($entries -contains $file)) {
                  throw "Package '$($_.Name)' is missing required root file '$file'."
                }
              }
            } finally {
              $zip.Dispose()
            }
          }

      - name: Upload solution package
        uses: actions/upload-artifact@v4
        with:
          name: assessment-pcf-solution
          path: |
            bin/Release/**/*.zip
